# === GESTORE MOVIMENTO MONITOR ROFI ===

MONITOR_CONF="$HOME/.config/hypr/monitor.conf"

# Funzione per ottenere monitor ordinati
get_monitors(){
    local mons=($(hyprctl monitors | grep "Monitor" | grep -v "disabled" | awk '{print $2}'))
    local sorted=()

    for m in "${mons[@]}"; do
        [[ "$m" == "eDP-1" ]] && sorted+=("$m")
    done
    for m in "${mons[@]}"; do
        [[ "$m" != "eDP-1" ]] && sorted+=("$m")
    done

    echo "${sorted[@]}"
}

# Funzione per refresh completo
refresh_hyprland(){
    for m in $(hyprctl monitors | grep "Monitor" | awk '{print $2}'); do
        hyprctl keyword monitor "$m,disable"
    done
    sleep 0.3
    hyprctl reload
    sleep 0.3
    hyprctl dispatch dpms on
}

# Funzione per controllare se Ã¨ attivo il mirroring
is_mirrored(){
    if grep -q "mirror" "$MONITOR_CONF"; then
        return 0
    else
        return 1
    fi
}

# Funzione per settare la posizione
monitor_positioning(){
    # Esegui refresh solo se nel file precedente era presente "mirror"
    if is_mirrored; then
        > "$MONITOR_CONF"
        refresh_hyprland
    else
        > "$MONITOR_CONF"
    fi

    local x=0
    local y=0
    local monitors=($(get_monitors))

    for m in "${monitors[@]}"; do
        echo "monitor = $m,preferred,${x}x${y},1" >> "$MONITOR_CONF"
        x=$((x + $1))
        y=$((y + $2))
    done

    hyprctl reload
}

# Mostra il menu
choice=$(echo -e "Select direction:\nUp\nRight\nDown\nLeft\n--------------------\nBack\nExit" | rofi -dmenu -i -p "Selezione direzione Monitor")

# Aggiorna lo stato dei monitor

# Gestione scelte
case "$choice" in
    "Up")
        monitor_positioning 0 -1080 
        ;;
    "Down")
        monitor_positioning 0 1080
        ;;
    "Left")
        monitor_positioning -1920 0
        ;;
    "Right")
        monitor_positioning 1920 0
        ;;
    "Back")
        exec "$HOME/.config/rofi/Monitor/rofi-monitor"
        ;;
    *)
        exit 0
        ;;
esac